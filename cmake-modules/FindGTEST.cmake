#
# Find GTEST
#
# This module defines the following variables:
# - GTEST_INCLUDE_DIRS
# - GTEST_FOUND
# - GTEST_HEADERS
# - GTEST_LIBRARIES
# The following variables can be set as arguments for the module.
# - GTEST_ROOT_DIR : Root library directory of GTEST
#
include(FindPackageHandleStandardArgs)

set(GTEST_PATHS
  ${GTEST_ROOT_DIR}
  ${QUARK_DEPENDENCIES}
)

find_path(GTEST_INCLUDE_DIR gtest/gtest.h PATH_SUFFIXES include PATHS ${GTEST_PATHS})

 set(CMAKE_FIND_LIBRARY_PREFIXES "lib" "")
if(WIN32)
  set(CMAKE_FIND_LIBRARY_SUFFIXES ".dll")
  if(GTEST_STATIC)
    set(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")
  endif(GTEST_STATIC)
else(WIN32)
  set(CMAKE_FIND_LIBRARY_SUFFIXES ".so")
  if(GTEST_STATIC)
    set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
  endif(GTEST_STATIC)
endif()

set(BUILD_SUFFIX "")
if(CMAKE_BUILD_TYPE MATCHES Debug)
set(BUILD_SUFFIX "-d")
message("DEBUG MODE")
endif(CMAKE_BUILD_TYPE MATCHES Debug)

set(GTEST_LIBRARY GTEST_LIBRARY-NOTFOUND)
find_library(GTEST_LIBRARY PATH_SUFFIXES lib lib64 NAMES gtest${BUILD_SUFFIX} PATHS ${GTEST_PATHS})

set(GTEST_MAIN_LIBRARY GTEST_LIBRARY-NOTFOUND)
find_library(GTEST_MAIN_LIBRARY PATH_SUFFIXES lib lib64 NAMES gtest_main${BUILD_SUFFIX} PATHS ${GTEST_PATHS})

find_package_handle_standard_args(GTEST DEFAULT_MSG GTEST_INCLUDE_DIR GTEST_LIBRARY GTEST_MAIN_LIBRARY)

if (GTEST_FOUND)
  set(GTEST_INCLUDE_DIRS ${GTEST_INCLUDE_DIR})
  set(GTEST_LIBRARIES ${GTEST_LIBRARY} ${GTEST_MAIN_LIBRARY})
  file(GLOB_RECURSE GTEST_HEADERS ${GTEST_INCLUDE_DIR}/*.hpp ${GTEST_INCLUDE_DIR}/*.h)
endif()

mark_as_advanced(GTEST_INCLUDE_DIR GTEST_LIBRARY GTEST_PATHS LIBRARY_NAME)
